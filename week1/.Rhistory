par(mfrow=c(length(defi),length(state)),mar=c(0,2,2,0))
plot.new()
for(x in defi){
for(y in state){
tempdata<-subset(x=dataset,
subset=(DRG.Definition== x)&(Provider.State== y),
select=c(Average.Covered.Charges,Average.Total.Payments)
)
points(tempdata$Average.Covered.Charges,tempdata$Average.Total.Payments)
}
}
for(x in defi){
for(y in state){
tempdata<-subset(x=dataset,
subset=(DRG.Definition== x)&(Provider.State== y),
select=c(Average.Covered.Charges,Average.Total.Payments)
)
plot(tempdata$Average.Covered.Charges,tempdata$Average.Total.Payments)
}
}
plot(dataset$Average.Covered.Charges,dataset$Average.Total.Payments,
xlab='mean covered charges',
ylab = 'mean total payments',
main = 'Relationship in New York',
col = rgb(0,.5,.5, .3))
for(x in defi){
for(y in state){
tempdata<-subset(x=dataset,
subset=(DRG.Definition== x)&(Provider.State== y),
select=c(Average.Covered.Charges,Average.Total.Payments)
)
plot(tempdata$Average.Covered.Charges,tempdata$Average.Total.Payments)
}
}
for(x in defi){
for(y in state){
tempdata<-subset(x=dataset,
subset=(DRG.Definition== x)&(Provider.State== y),
select=c(Average.Covered.Charges,Average.Total.Payments)
)
plot(tempdata$Average.Covered.Charges,tempdata$Average.Total.Payments)
}
}
for(x in defi){
for(y in state){
tempdata<-subset(x=dataset,
subset=(DRG.Definition== x)&(Provider.State== y),
select=c(Average.Covered.Charges,Average.Total.Payments)
)
plot(tempdata$Average.Covered.Charges,tempdata$Average.Total.Payments)
}
}
for(x in defi){
for(y in state){
tempdata<-subset(x=dataset,
subset=(DRG.Definition== x)&(Provider.State== y),
select=c(Average.Covered.Charges,Average.Total.Payments)
)
plot(tempdata$Average.Covered.Charges,tempdata$Average.Total.Payments)
}
}
for(x in defi){
for(y in state){
tempdata<-subset(x=dataset,
subset=(DRG.Definition== x)&(Provider.State== y),
select=c(Average.Covered.Charges,Average.Total.Payments)
)
plot(tempdata$Average.Covered.Charges,tempdata$Average.Total.Payments)
}
}
plot(dataset$Average.Covered.Charges,dataset$Average.Total.Payments,
xlab='mean covered charges',
ylab = 'mean total payments',
main = 'Relationship in New York',
col = rgb(0,.5,.5, .3))
for(x in defi){
for(y in state){
tempdata<-subset(x=dataset,
subset=(DRG.Definition== x)&(Provider.State== y),
select=c(Average.Covered.Charges,Average.Total.Payments)
)
#plot(tempdata$Average.Covered.Charges,tempdata$Average.Total.Payments)
plot(dataset$Average.Covered.Charges,dataset$Average.Total.Payments,
xlab='mean covered charges',
ylab = 'mean total payments',
main = 'Relationship in New York',
col = rgb(0,.5,.5, .3))
}
}
for(x in defi){
for(y in state){
tempdata<-subset(x=dataset,
subset=(DRG.Definition== x)&(Provider.State== y),
select=c(Average.Covered.Charges,Average.Total.Payments)
)
#plot(tempdata$Average.Covered.Charges,tempdata$Average.Total.Payments)
plot(dataset$Average.Covered.Charges,dataset$Average.Total.Payments,
xlab='mean covered charges',
ylab = 'mean total payments',
main = 'Relationship in New York',
col = rgb(0,.5,.5, .3))
}
}
for(x in defi){
for(y in state){
tempdata<-subset(x=dataset,
subset=(DRG.Definition== x)&(Provider.State== y),
select=c(Average.Covered.Charges,Average.Total.Payments)
)
#plot(tempdata$Average.Covered.Charges,tempdata$Average.Total.Payments)
plot(dataset$Average.Covered.Charges,dataset$Average.Total.Payments,
xlab='mean covered charges',
ylab = 'mean total payments',
main = 'Relationship in New York',
col = rgb(0,.5,.5, .3))
}
}
for(x in defi){
for(y in state){
tempdata<-subset(x=dataset,
subset=(DRG.Definition== x)&(Provider.State== y),
select=c(Average.Covered.Charges,Average.Total.Payments)
)
#plot(tempdata$Average.Covered.Charges,tempdata$Average.Total.Payments)
plot(dataset$Average.Covered.Charges,dataset$Average.Total.Payments,
xlab='mean covered charges',
ylab = 'mean total payments',
main = 'Relationship in New York',
col = rgb(0,.5,.5, .3))
}
}
for(x in defi){
for(y in state){
tempdata<-subset(x=dataset,
subset=(DRG.Definition== x)&(Provider.State== y),
select=c(Average.Covered.Charges,Average.Total.Payments)
)
plot.new()
plot(tempdata$Average.Covered.Charges,tempdata$Average.Total.Payments)
}
}
for(x in defi){
for(y in state){
tempdata<-subset(x=dataset,
subset=(DRG.Definition== x)&(Provider.State== y),
select=c(Average.Covered.Charges,Average.Total.Payments)
)
plot.new()
plot(tempdata$Average.Covered.Charges,tempdata$Average.Total.Payments)
}
}
dev.off()
par(mfrow=c(length(defi),length(state)),mar=c(0,2,2,0))
for(x in defi){
for(y in state){
tempdata<-subset(x=dataset,
subset=(DRG.Definition== x)&(Provider.State== y),
select=c(Average.Covered.Charges,Average.Total.Payments)
)
plot.new()
plot(tempdata$Average.Covered.Charges,tempdata$Average.Total.Payments)
}
}
par(mfrow=c(length(defi),length(state)),mar=c(2,2,2,2))
for(x in defi){
for(y in state){
tempdata<-subset(x=dataset,
subset=(DRG.Definition== x)&(Provider.State== y),
select=c(Average.Covered.Charges,Average.Total.Payments)
)
plot.new()
plot(tempdata$Average.Covered.Charges,tempdata$Average.Total.Payments)
}
}
dev.off()
defi<-unique(dataset$DRG.Definition)
state<-unique(dataset$Provider.State)
par(mfrow=c(length(defi),length(state)),mar=c(2,2,2,2))
for(x in defi){
for(y in state){
tempdata<-subset(x=dataset,
subset=(DRG.Definition== x)&(Provider.State== y),
select=c(Average.Covered.Charges,Average.Total.Payments)
)
plot.new()
plot(tempdata$Average.Covered.Charges,tempdata$Average.Total.Payments)
}
}
par(mfrow=c(length(defi),length(state)),mar=c(0,0,1,1))
for(x in defi){
for(y in state){
tempdata<-subset(x=dataset,
subset=(DRG.Definition== x)&(Provider.State== y),
select=c(Average.Covered.Charges,Average.Total.Payments)
)
plot.new()
plot(tempdata$Average.Covered.Charges,tempdata$Average.Total.Payments)
}
}
par(mfrow=c(length(defi),length(state)),mar=c(1,1,1,1))
for(x in defi){
for(y in state){
tempdata<-subset(x=dataset,
subset=(DRG.Definition== x)&(Provider.State== y),
select=c(Average.Covered.Charges,Average.Total.Payments)
)
plot.new()
plot(tempdata$Average.Covered.Charges,tempdata$Average.Total.Payments)
}
}
par(mfrow=c(length(defi),length(state)),mar=c(1,1,1,1))
for(x in defi){
for(y in state){
tempdata<-subset(x=dataset,
subset=(DRG.Definition== x)&(Provider.State== y),
select=c(Average.Covered.Charges,Average.Total.Payments)
)
plot.new()
points(tempdata$Average.Covered.Charges,tempdata$Average.Total.Payments)
}
}
defi<-unique(dataset$DRG.Definition)
state<-unique(dataset$Provider.State)
par(mfrow=c(length(defi),length(state)),mar=c(1,1,1,1))
for(x in defi){
for(y in state){
tempdata<-subset(x=dataset,
subset=(DRG.Definition== x)&(Provider.State== y),
select=c(Average.Covered.Charges,Average.Total.Payments)
)
plot.new()
plot(tempdata$Average.Covered.Charges,
tempdata$Average.Total.Payments)
}
}
state<-unique(dataset$Provider.State)
par(mfrow=c(length(defi),length(state)),mar=c(0,0,0,0))
for(x in defi){
for(y in state){
tempdata<-subset(x=dataset,
subset=(DRG.Definition== x)&(Provider.State== y),
select=c(Average.Covered.Charges,Average.Total.Payments)
)
plot.new()
plot(tempdata$Average.Covered.Charges,
tempdata$Average.Total.Payments)
}
}
for(x in defi){
for(y in state){
tempdata<-subset(x=dataset,
subset=(DRG.Definition== x)&(Provider.State== y),
select=c(Average.Covered.Charges,Average.Total.Payments)
)
plot.new()
plot(tempdata$Average.Covered.Charges,
tempdata$Average.Total.Payments)
print(x)
print(y)
}
}
par()$mfrow
dev.off()
defi<-unique(dataset$DRG.Definition)
state<-unique(dataset$Provider.State)
par(mfrow=c(length(defi),length(state)),mar=c(0,0,0,0))
plot(dataset$Average.Covered.Charges,dataset$Average.Total.Payments)
plot(dataset$Average.Covered.Charges,dataset$Average.Total.Payments)
plot(dataset$Average.Covered.Charges,dataset$Average.Total.Payments)
plot(dataset$Average.Covered.Charges,dataset$Average.Total.Payments)
plot(dataset$Average.Covered.Charges,dataset$Average.Total.Payments)
plot(dataset$Average.Covered.Charges,dataset$Average.Total.Payments)
plot(dataset$Average.Covered.Charges,dataset$Average.Total.Payments)
plot(dataset$Average.Covered.Charges,dataset$Average.Total.Payments)
plot(dataset$Average.Covered.Charges,dataset$Average.Total.Payments)
plot.new()
plot(dataset$Average.Covered.Charges,dataset$Average.Total.Payments)
plot.new()
points(dataset$Average.Covered.Charges,dataset$Average.Total.Payments)
plot.new(dataset$Average.Covered.Charges,dataset$Average.Total.Payments)
dataset$Provider.State=='TX'
ttt<-dataset$Provider.State=='TX'
?for
()
?loop
u<-[]
list(1,2,3)
list('ui',2,3)
for(x in defi){
for(y in state){
tempdata<-subset(x=dataset,
subset=(DRG.Definition== x)&(Provider.State== y),
select=c(Average.Covered.Charges,Average.Total.Payments)
)
plot(tempdata$Average.Covered.Charges,
tempdata$Average.Total.Payments)
}
}
dev.off()
defi<-unique(dataset$DRG.Definition)
state<-unique(dataset$Provider.State)
par(mfrow=c(length(defi),length(state)),mar=c(0,0,0,0))
for(x in defi){
for(y in state){
tempdata<-subset(x=dataset,
subset=(DRG.Definition== x)&(Provider.State== y),
select=c(Average.Covered.Charges,Average.Total.Payments)
)
plot(tempdata$Average.Covered.Charges,
tempdata$Average.Total.Payments)
}
}
dev.off()
defi<-unique(dataset$DRG.Definition)
state<-unique(dataset$Provider.State)
par(mfrow=c(length(defi),length(state)),mar=c(1,1,1,1))
for(x in defi){
for(y in state){
tempdata<-subset(x=dataset,
subset=(DRG.Definition== x)&(Provider.State== y),
select=c(Average.Covered.Charges,Average.Total.Payments)
)
plot(tempdata$Average.Covered.Charges,
tempdata$Average.Total.Payments)
}
}
state<-unique(dataset$Provider.State)
par(mfrow=c(length(defi),length(state)),mar=c(1,1,1,1))
for(x in defi){
for(y in state){
tempdata<-subset(x=dataset,
subset=(DRG.Definition== x)&(Provider.State== y),
select=c(Average.Covered.Charges,Average.Total.Payments)
)
plot(tempdata$Average.Covered.Charges,
tempdata$Average.Total.Payments,
col = rgb(0,.5,.5, .3))
}
}
defi<-unique(dataset$DRG.Definition)
state<-unique(dataset$Provider.State)
par(mfrow=c(length(defi),length(state)),mar=c(1,1,1,1))
for(x in defi){
for(y in state){
tempdata<-subset(x=dataset,
subset=(DRG.Definition== x)&(Provider.State== y),
select=c(Average.Covered.Charges,Average.Total.Payments)
)
plot(tempdata$Average.Covered.Charges,
tempdata$Average.Total.Payments,
col = rgb(0,.5,.5, .3))
model <- lm(Average.Total.Payments~Average.Covered.Charges, data = tempdat)
abline(model, lwd = 1, col = "red")
}
}
defi<-unique(dataset$DRG.Definition)
state<-unique(dataset$Provider.State)
par(mfrow=c(length(defi),length(state)),mar=c(1,1,1,1))
for(x in defi){
for(y in state){
tempdata<-subset(x=dataset,
subset=(DRG.Definition== x)&(Provider.State== y),
select=c(Average.Covered.Charges,Average.Total.Payments)
)
plot(tempdata$Average.Covered.Charges,
tempdata$Average.Total.Payments,
col = rgb(0,.5,.5, .3))
model <- lm(Average.Total.Payments~Average.Covered.Charges, data = tempdata)
abline(model, lwd = 1, col = "red")
}
}
title(main = “name”)
title(main = "name")
par(title(main = "name"))
par(main = "name")
par()
par(title="aa")
par(title(main = "name"))
title(main = "name")
par()$title
par(title="a")
par(main="a")
par(text="a")
text(2,2,'ss
')
text(2,2,"asdfkjhqiuwoe")
text(2,2,"asdfkjhqiuwoe")
text(2,2,"asdfkjhqiuwoe")
?par
showLty <- function(ltys, xoff = 0, ...) {
stopifnot((n <- length(ltys)) >= 1)
op <- par(mar = rep(.5,4)); on.exit(par(op))
plot(0:1, 0:1, type = "n", axes = FALSE, ann = FALSE)
y <- (n:1)/(n+1)
clty <- as.character(ltys)
mytext <- function(x, y, txt)
text(x, y, txt, adj = c(0, -.3), cex = 0.8, ...)
abline(h = y, lty = ltys, ...); mytext(xoff, y, clty)
y <- y - 1/(3*(n+1))
abline(h = y, lty = ltys, lwd = 2, ...)
mytext(1/8+xoff, y, paste(clty," lwd = 2"))
}
showLty(c("solid", "dashed", "dotted", "dotdash", "longdash", "twodash"))
par(new = TRUE)  # the same:
showLty(c("solid", "44", "13", "1343", "73", "2262"), xoff = .2, col = 2)
showLty(c("11", "22", "33", "44",   "12", "13", "14",   "21", "31"))
def.off()
dev.off()
showLty <- function(ltys, xoff = 0, ...) {
stopifnot((n <- length(ltys)) >= 1)
op <- par(mar = rep(.5,4)); on.exit(par(op))
plot(0:1, 0:1, type = "n", axes = FALSE, ann = FALSE)
y <- (n:1)/(n+1)
clty <- as.character(ltys)
mytext <- function(x, y, txt)
text(x, y, txt, adj = c(0, -.3), cex = 0.8, ...)
abline(h = y, lty = ltys, ...); mytext(xoff, y, clty)
y <- y - 1/(3*(n+1))
abline(h = y, lty = ltys, lwd = 2, ...)
mytext(1/8+xoff, y, paste(clty," lwd = 2"))
}
showLty(c("solid", "dashed", "dotted", "dotdash", "longdash", "twodash"))
par(new = TRUE)  # the same:
showLty(c("solid", "44", "13", "1343", "73", "2262"), xoff = .2, col = 2)
showLty(c("11", "22", "33", "44",   "12", "13", "14",   "21", "31"))
par("ylog") # FALSE
plot(1 : 12, log = "y")
par("ylog") # TRUE
plot(1:2, xaxs = "i") # 'inner axis' w/o extra space
par(c("usr", "xaxp"))
( nr.prof <-
c(prof.pilots = 16, lawyers = 11, farmers = 10, salesmen = 9, physicians = 9,
mechanics = 6, policemen = 6, managers = 6, engineers = 5, teachers = 4,
housewives = 3, students = 3, armed.forces = 1))
par(las = 3)
barplot(rbind(nr.prof)) # R 0.63.2: shows alignment problem
par(las = 0)  # reset to default
op <- par(mfrow = c(2, 2), # 2 x 2 pictures on one plot
pty = "s")       # square plotting region,
# independent of device size
## At end of plotting, reset to previous settings:
par(op)
## Alternatively,
op <- par(no.readonly = TRUE) # the whole list of settable par's.
## do lots of plotting and par(.) calls, then reset:
par(op)
## Note this is not in general good practice
op <- par(mfrow = c(2, 2), # 2 x 2 pictures on one plot
pty = "s")       # square plotting region,
# independent of device size
## At end of plotting, reset to previous settings:
par(op)
## Alternatively,
op <- par(no.readonly = TRUE) # the whole list of settable par's.
## do lots of plotting and par(.) calls, then reset:
par(op)
## Note this is not in general good practice
par("ylog") # FALSE
plot(1 : 12, log = "y")
par("ylog") # TRUE
plot(1:2, xaxs = "i") # 'inner axis' w/o extra space
par(c("usr", "xaxp"))
( nr.prof <-
c(prof.pilots = 16, lawyers = 11, farmers = 10, salesmen = 9, physicians = 9,
mechanics = 6, policemen = 6, managers = 6, engineers = 5, teachers = 4,
housewives = 3, students = 3, armed.forces = 1))
par(las = 3)
barplot(rbind(nr.prof)) # R 0.63.2: shows alignment problem
par(las = 0)  # reset to default
defi<-unique(dataset$DRG.Definition)
state<-unique(dataset$Provider.State)
par(mfrow=c(length(defi),length(state)),mar=c(1,1,1,1))
for(x in defi){
for(y in state){
tempdata<-subset(x=dataset,
subset=(DRG.Definition== x)&(Provider.State== y),
select=c(Average.Covered.Charges,Average.Total.Payments)
)
plot(tempdata$Average.Covered.Charges,
tempdata$Average.Total.Payments,
col = rgb(0,.5,.5, .3))
model <- lm(Average.Total.Payments~Average.Covered.Charges, data = tempdata)
abline(model, lwd = 1, col = "red")
}
}
mtext("Page Title", side = 3, outer = TRUE)
mtext("Page Title", side = 1, outer = TRUE)
mtext("Page Title", side = 1, outer = FAULT)
mtext("Page Title", side = 1)
?mtext
defi<-unique(dataset$DRG.Definition)
state<-unique(dataset$Provider.State)
par(mfrow=c(length(defi),length(state)),mar=c(1,1,1,1),oma = c(0, 0, 3, 0))
for(x in defi){
for(y in state){
tempdata<-subset(x=dataset,
subset=(DRG.Definition== x)&(Provider.State== y),
select=c(Average.Covered.Charges,Average.Total.Payments)
)
plot(tempdata$Average.Covered.Charges,
tempdata$Average.Total.Payments,
col = rgb(0,.5,.5, .3))
model <- lm(Average.Total.Payments~Average.Covered.Charges, data = tempdata)
abline(model, lwd = 1, col = "red")
}
}
mtext("Page Title", side = 1, outer = TRUE)
mtext("Page Title", side = 2, outer = TRUE)
mtext("Page Title", side = 3, outer = TRUE)
mtext("Page Title", side = 4, outer = TRUE)
?mtext
?par()
